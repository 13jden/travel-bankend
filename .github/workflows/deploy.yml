name: Deploy to Server

on:
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - completed
    branches: [master, main, develop]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: self-hosted
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    strategy:
      matrix:
        include:
          - branch: develop
            environment: staging
            server_host: ${{ secrets.STAGING_HOST }}
            server_user: ${{ secrets.STAGING_USER }}
            server_key: ${{ secrets.STAGING_SSH_KEY }}
          - branch: master
            environment: production
            server_host: ${{ secrets.PRODUCTION_HOST }}
            server_user: ${{ secrets.PRODUCTION_USER }}
            server_key: ${{ secrets.PRODUCTION_SSH_KEY }}
          - branch: main
            environment: production
            server_host: ${{ secrets.PRODUCTION_HOST }}
            server_user: ${{ secrets.PRODUCTION_USER }}
            server_key: ${{ secrets.PRODUCTION_SSH_KEY }}
    
    environment: ${{ matrix.environment }}
    
    steps:
    - name: Checkout deployment scripts
      uses: actions/checkout@v4
      with:
        sparse-checkout: |
          deploy/
        sparse-checkout-cone-mode: false
        
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ matrix.server_key }}
        
    - name: Add server to known hosts
      run: |
        ssh-keyscan -H ${{ matrix.server_host }} >> ~/.ssh/known_hosts
        
    - name: Deploy to server
      run: |
        # 创建部署目录
        ssh ${{ matrix.server_user }}@${{ matrix.server_host }} "mkdir -p /opt/travel-spring"
        
        # 上传部署文件
        scp -r deploy/* ${{ matrix.server_user }}@${{ matrix.server_host }}:/opt/travel-spring/
        
        # 设置环境变量
        ssh ${{ matrix.server_user }}@${{ matrix.server_host }} "
          cd /opt/travel-spring
          
          # 创建环境配置文件（如果不存在）
          if [ ! -f .env ]; then
            cp env.example .env
            sed -i 's/your-username/${{ github.repository_owner }}/g' .env
          fi
          
          # 给部署脚本执行权限
          chmod +x deploy.sh
          
          # 执行部署
          ./deploy.sh ${{ matrix.environment }}
        "
        
    - name: Verify deployment
      run: |
        ssh ${{ matrix.server_user }}@${{ matrix.server_host }} "
          # 等待服务启动
          sleep 30
          
          # 检查服务状态
          if curl -f http://localhost:8080/actuator/health; then
            echo '✅ 部署成功！服务正常运行'
          else
            echo '❌ 部署失败！服务未正常启动'
            docker-compose -f /opt/travel-spring/docker-compose.yml logs --tail=50
            exit 1
          fi
        "
        
    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "🎉 ${{ matrix.environment }} 环境部署成功！"
        else
          echo "💥 ${{ matrix.environment }} 环境部署失败！"
        fi 